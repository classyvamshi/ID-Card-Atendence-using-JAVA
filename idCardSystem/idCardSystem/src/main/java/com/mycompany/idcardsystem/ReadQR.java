/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.idcardsystem;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.SimpleDateFormat;
import java.util.Date;

public class ReadQR extends javax.swing.JFrame implements Runnable, ThreadFactory {

    /**
     * Creates new form ReadQR
     */
    private WebcamPanel panel = null; // intilize output
    private Webcam webcam = null;
    private Executor executor = Executors.newSingleThreadExecutor(this);

    public ReadQR() {
        initComponents();
        initWebcam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        result_label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        result_box = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(43, 350));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 370, 370));

        result_label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        result_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        result_label.setText("RESULT");
        jPanel1.add(result_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 390, 30));

        result_box.setEditable(false);
        result_box.setColumns(20);
        result_box.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        result_box.setForeground(new java.awt.Color(255, 0, 51));
        result_box.setRows(2);
        result_box.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(result_box);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 380, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReadQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReadQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReadQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReadQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReadQR().setVisible(true);
            }
        });
    }

    private void initWebcam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getDefault();
        webcam.setViewSize(size);
        panel = new WebcamPanel(webcam);

        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);

        jPanel2.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 300));
        executor.execute(this);
    }

    @Override
    public void run() {
        String time = "";
        String date = "";
        String sem = "";
        int day = 7;
        String prevDate = "";
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(ReadQR.class.getName()).log(Level.SEVERE, null, ex);
            }

            Result result = null;
            BufferedImage image = null;
            String rollno = null;
            
            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }

            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException ex) {
                Logger.getLogger(ReadQR.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (result != null) {
                SimpleDateFormat format = new SimpleDateFormat("dd_MM_yyyy");
                Date sem1_start;
                Date sem2_start;
                Date sem3_start;
                try {
                    sem1_start = format.parse("31_10_2022");
                    System.out.println(sem1_start + "kewnfw");
                    sem2_start = format.parse("08_03_2023");
                    sem3_start = format.parse("08_08_2023");

                    rollno = result.getText();
                    result_box.setText("ROLL NUMBER:- " + rollno);
                    SimpleDateFormat formatter = new SimpleDateFormat("dd_MM_yyyy HH:mm:ss");
                    Date currDateTime = new Date();
                    String datetime[] = formatter.format(currDateTime).split(" ");
                    System.out.println(datetime[0]);
                    System.out.println(datetime[1]);
                    date = datetime[0];
                    time = datetime[1];
                    if (format.parse(date).compareTo(sem1_start) >= 0 && format.parse(date).compareTo(sem2_start) < 0) {sem = "sem1";}
                    else if (format.parse(date).compareTo(sem2_start) >= 0 && format.parse(date).compareTo(sem3_start) < 0) {sem = "sem2";}
                    day = currDateTime.getDay();
                    System.out.println(day + "the day");
                    String tableName = date + "_attendance_" + sem;
                    if (prevDate != date) {
                        AttendanceManagement.createAttendanceTable(tableName, day);
                    }
                    boolean success = AttendanceManagement.addAttendance(rollno, time, day, tableName);
                    if (success) {
                        result_box.setText(result_box.getText() + "\nAttendance added successfully");
                        Students a = new Students(rollno);
                        //Users b =new Users (rollno);
                    } else if (!success) {
                        result_box.setText(result_box.getText() + "\nLate Attendance");
                        Students a = new Students(rollno);
                        //Users b =new Users (rollno);
                        
                    }

                    prevDate = date;
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea result_box;
    private javax.swing.JLabel result_label;
    // End of variables declaration//GEN-END:variables

}
